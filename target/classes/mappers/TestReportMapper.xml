<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qadata.dao.TestReportMapper" >
  <resultMap id="BaseResultMap" type="com.qadata.pojo.TestReport" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="report_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="test_lab" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="test_result" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="test_date" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="test_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="buyer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="other_info" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="file_url" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, report_number, test_lab, test_result, test_date, test_type, buyer, other_info, 
    file_url
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from test_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from test_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qadata.pojo.TestReport" >
    insert into test_report (id, user_id, report_number, 
      test_lab, test_result, test_date, 
      test_type, buyer, other_info, 
      file_url)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{reportNumber,jdbcType=VARCHAR}, 
      #{testLab,jdbcType=VARCHAR}, #{testResult,jdbcType=VARCHAR}, #{testDate,jdbcType=DATE}, 
      #{testType,jdbcType=VARCHAR}, #{buyer,jdbcType=VARCHAR}, #{otherInfo,jdbcType=VARCHAR}, 
      #{fileUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qadata.pojo.TestReport" >
    insert into test_report
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="reportNumber != null" >
        report_number,
      </if>
      <if test="testLab != null" >
        test_lab,
      </if>
      <if test="testResult != null" >
        test_result,
      </if>
      <if test="testDate != null" >
        test_date,
      </if>
      <if test="testType != null" >
        test_type,
      </if>
      <if test="buyer != null" >
        buyer,
      </if>
      <if test="otherInfo != null" >
        other_info,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="reportNumber != null" >
        #{reportNumber,jdbcType=VARCHAR},
      </if>
      <if test="testLab != null" >
        #{testLab,jdbcType=VARCHAR},
      </if>
      <if test="testResult != null" >
        #{testResult,jdbcType=VARCHAR},
      </if>
      <if test="testDate != null" >
        #{testDate,jdbcType=DATE},
      </if>
      <if test="testType != null" >
        #{testType,jdbcType=VARCHAR},
      </if>
      <if test="buyer != null" >
        #{buyer,jdbcType=VARCHAR},
      </if>
      <if test="otherInfo != null" >
        #{otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qadata.pojo.TestReport" >
    update test_report
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="reportNumber != null" >
        report_number = #{reportNumber,jdbcType=VARCHAR},
      </if>
      <if test="testLab != null" >
        test_lab = #{testLab,jdbcType=VARCHAR},
      </if>
      <if test="testResult != null" >
        test_result = #{testResult,jdbcType=VARCHAR},
      </if>
      <if test="testDate != null" >
        test_date = #{testDate,jdbcType=DATE},
      </if>
      <if test="testType != null" >
        test_type = #{testType,jdbcType=VARCHAR},
      </if>
      <if test="buyer != null" >
        buyer = #{buyer,jdbcType=VARCHAR},
      </if>
      <if test="otherInfo != null" >
        other_info = #{otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qadata.pojo.TestReport" >
    update test_report
    set user_id = #{userId,jdbcType=INTEGER},
      report_number = #{reportNumber,jdbcType=VARCHAR},
      test_lab = #{testLab,jdbcType=VARCHAR},
      test_result = #{testResult,jdbcType=VARCHAR},
      test_date = #{testDate,jdbcType=DATE},
      test_type = #{testType,jdbcType=VARCHAR},
      buyer = #{buyer,jdbcType=VARCHAR},
      other_info = #{otherInfo,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getTotalNumber" resultType="int">
    select count(1) from test_report
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="getTotalNumberByAdmin" resultType="int">
    select count(1) from test_report
  </select>

  <!--新增-->
  <select id="selectTestReportInRange" parameterType="com.qadata.vo.Range2" resultMap="BaseResultMap">
    SELECT * FROM
    (SELECT ROW_NUMBER() OVER(ORDER BY id DESC) as rowIndex,* FROM test_report)as b where <![CDATA[(b.rowindex>=#{start}) and (b.rowindex <= #{last}) and(b.user_id=${userId}) order by b.rowindex
        ]]>
  </select>

  <select id="selectAllTestReportInRange" parameterType="com.qadata.vo.Range" resultMap="BaseResultMap">
    SELECT * FROM
    (SELECT ROW_NUMBER() OVER(ORDER BY id DESC) as rowIndex,* FROM test_report)as b where <![CDATA[(b.rowindex>=#{start}) and (b.rowindex <= #{last}) order by b.rowindex
        ]]>
  </select>

  <select id="fuzzySearch" parameterType="com.qadata.vo.Range3" resultMap="BaseResultMap">
    SELECT * FROM
    (SELECT ROW_NUMBER() OVER(ORDER BY id DESC) as rowIndex,* FROM test_report)as b where
    <![CDATA[(b.rowindex>=#{start})
      and (b.rowindex <= #{last})
      and (b.user_id=${userId})
      and (b.report_number + b.test_lab + b.test_result + b.test_type + b.buyer like '%${content}%'  or b.test_date like '%${content}%')
      order by b.rowindex
        ]]>
  </select>

  <select id="getFuzzySearchTotalNumber" resultType="int" parameterType="com.qadata.vo.Range3">
    select count(*) from
    test_report where
    user_id=#{userId}
    and (report_number + test_lab + test_result + test_type + buyer like '%${content}%'  or test_date like '%${content}%')
  </select>
</mapper>